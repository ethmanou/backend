stages:
  - debug
  - lint
  - build
  - deploy

before_script:
  - apt-get update
  - apt-get -y install npm nodejs
  - npm install

eslint:
  stage: lint
  script:
    - npx eslint . # Run ESLint for linting

build:
  stage: build
  script:
    - npm run build # Command to build your Node.js application

deploy:
  variables:
    KEY: "LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0KYjNCbGJuTnphQzFyWlhrdGRqRUFBQUFBQkc1dmJtVUFBQUFFYm05dVpRQUFBQUFBQUFBQkFBQUFNd0FBQUF0egpjMmd0WldReU5UVXhPUUFBQUNCTlFMbE5hcDZaRWUwaEdzTUwwWjROVlk4Q0QyQktONDFmbnhQS3cyV0Mxd0FBCkFJam51L29tNTd2NkpnQUFBQXR6YzJndFpXUXlOVFV4T1FBQUFDQk5RTGxOYXA2WkVlMGhHc01MMFo0TlZZOEMKRDJCS040MWZueFBLdzJXQzF3QUFBRUF3VVFJQkFUQUZCZ01yWlhBRUlnUWdISlJxbDB2ekJqcXBBTHpueHVWbwpCVTFBdVUxcW5wa1I3U0Vhd3d2Um5nMVZqd0lQWUVvM2pWK2ZFOHJEWllMWEFBQUFBQUVDQXdRRgotLS0tLUVORCBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0K"
  stage: deploy
  script:
    - echo "$KEY"
    - echo "$KEY" | base64 --decode > key.pem
    - chmod 600 key.pem
    - cat key.pem
    - ssh -o StrictHostKeyChecking=no -i key.pem admin@13.48.138.37 "cd backend && sudo git pull" # SSH into your server and update the app
    - ssh -o StrictHostKeyChecking=no -i key.pem admin@13.48.138.37 "cd backend && sudo npm install && sudo npm run build && bash ../restart.sh && sudo pm2 save" # Run necessary commands on the server
  only:
    - master # Deploy only when changes are pushed to the master branch

debug:
  stage: debug
  script:
    - cat $AWS_ACCESS_KEY_ID